name: Processors
items:
- classData:
    optionsClassName: 
    optionsClassFullName: 
    configurationSamples: []
    description: Creates folders in Sared Queries for each Team
    className: CreateTeamFolders
    typeName: Processors
    architecture: v1
    options: []
  jekyllData:
    redirectFrom: []
    permalink: /Reference/v1/Processors/CreateTeamFolders/
- classData:
    optionsClassName: ExportProfilePictureFromADConfig
    optionsClassFullName: MigrationTools._EngineV1.Configuration.Processing.ExportProfilePictureFromADConfig
    configurationSamples:
    - name: default
      description: 
      sample: >-
        {
          "$type": "ExportProfilePictureFromADConfig",
          "Enabled": false,
          "Domain": null,
          "Username": null,
          "Password": null,
          "PictureEmpIDFormat": null
        }
      sampleFor: MigrationTools._EngineV1.Configuration.Processing.ExportProfilePictureFromADConfig
    description: Downloads corporate images and updates TFS/Azure DevOps profiles
    className: ExportProfilePictureFromADContext
    typeName: Processors
    architecture: v1
    options:
    - parameterName: Domain
      type: String
      description: The source domain where the pictures should be exported.
      defaultValue: String.Empty
    - parameterName: Enabled
      type: Boolean
      description: missng XML code comments
      defaultValue: missng XML code comments
    - parameterName: Password
      type: String
      description: The password of the user that is used to export the pictures.
      defaultValue: String.Empty
    - parameterName: PictureEmpIDFormat
      type: String
      description: 'TODO: You wpuld need to customise this for your system. Clone repo and run in Debug'
      defaultValue: String.Empty
    - parameterName: Username
      type: String
      description: The user name of the user that is used to export the pictures.
      defaultValue: String.Empty
  jekyllData:
    redirectFrom:
    - /Reference/v1/Processors/ExportProfilePictureFromADConfig/
    permalink: /Reference/v1/Processors/ExportProfilePictureFromADContext/
- classData:
    optionsClassName: 
    optionsClassFullName: 
    configurationSamples: []
    description: missng XML code comments
    className: ExportTeamList
    typeName: Processors
    architecture: v1
    options: []
  jekyllData:
    redirectFrom: []
    permalink: /Reference/v1/Processors/ExportTeamList/
- classData:
    optionsClassName: FakeProcessorConfig
    optionsClassFullName: MigrationTools._EngineV1.Configuration.Processing.FakeProcessorConfig
    configurationSamples:
    - name: default
      description: 
      sample: >-
        {
          "$type": "FakeProcessorConfig",
          "Enabled": false
        }
      sampleFor: MigrationTools._EngineV1.Configuration.Processing.FakeProcessorConfig
    description: "Note: this is only for internal usage. Don't use this in your configurations."
    className: FakeProcessor
    typeName: Processors
    architecture: v1
    options:
    - parameterName: Enabled
      type: Boolean
      description: missng XML code comments
      defaultValue: missng XML code comments
  jekyllData:
    redirectFrom:
    - /Reference/v1/Processors/FakeProcessorConfig/
    permalink: /Reference/v1/Processors/FakeProcessor/
- classData:
    optionsClassName: FixGitCommitLinksConfig
    optionsClassFullName: MigrationTools._EngineV1.Configuration.Processing.FixGitCommitLinksConfig
    configurationSamples:
    - name: default
      description: 
      sample: >-
        {
          "$type": "FixGitCommitLinksConfig",
          "Enabled": false,
          "TargetRepository": null,
          "QueryBit": null,
          "OrderBit": null
        }
      sampleFor: MigrationTools._EngineV1.Configuration.Processing.FixGitCommitLinksConfig
    description: missng XML code comments
    className: FixGitCommitLinks
    typeName: Processors
    architecture: v1
    options:
    - parameterName: Enabled
      type: Boolean
      description: missng XML code comments
      defaultValue: missng XML code comments
    - parameterName: OrderBit
      type: String
      description: missng XML code comments
      defaultValue: missng XML code comments
    - parameterName: QueryBit
      type: String
      description: missng XML code comments
      defaultValue: missng XML code comments
    - parameterName: TargetRepository
      type: String
      description: missng XML code comments
      defaultValue: missng XML code comments
  jekyllData:
    redirectFrom:
    - /Reference/v1/Processors/FixGitCommitLinksConfig/
    permalink: /Reference/v1/Processors/FixGitCommitLinks/
- classData:
    optionsClassName: ImportProfilePictureConfig
    optionsClassFullName: MigrationTools._EngineV1.Configuration.Processing.ImportProfilePictureConfig
    configurationSamples:
    - name: default
      description: 
      sample: >-
        {
          "$type": "ImportProfilePictureConfig",
          "Enabled": false
        }
      sampleFor: MigrationTools._EngineV1.Configuration.Processing.ImportProfilePictureConfig
    description: Downloads corporate images and updates TFS/Azure DevOps profiles
    className: ImportProfilePictureContext
    typeName: Processors
    architecture: v1
    options:
    - parameterName: Enabled
      type: Boolean
      description: missng XML code comments
      defaultValue: missng XML code comments
  jekyllData:
    redirectFrom:
    - /Reference/v1/Processors/ImportProfilePictureConfig/
    permalink: /Reference/v1/Processors/ImportProfilePictureContext/
- classData:
    optionsClassName: TeamMigrationConfig
    optionsClassFullName: MigrationTools._EngineV1.Configuration.Processing.TeamMigrationConfig
    configurationSamples:
    - name: default
      description: 
      sample: >-
        {
          "$type": "TeamMigrationConfig",
          "Enabled": false,
          "PrefixProjectToNodes": false,
          "EnableTeamSettingsMigration": true,
          "FixTeamSettingsForExistingTeams": false
        }
      sampleFor: MigrationTools._EngineV1.Configuration.Processing.TeamMigrationConfig
    description: 'Migrates Teams and Team Settings: This should be run after `NodeStructuresMigrationConfig` and before all other processors.'
    className: TeamMigrationContext
    typeName: Processors
    architecture: v1
    options:
    - parameterName: Enabled
      type: Boolean
      description: missng XML code comments
      defaultValue: missng XML code comments
    - parameterName: EnableTeamSettingsMigration
      type: Boolean
      description: Migrate original team settings after their creation on target team project
      defaultValue: true
    - parameterName: FixTeamSettingsForExistingTeams
      type: Boolean
      description: Reset the target team settings to match the source if the team exists
      defaultValue: true
    - parameterName: PrefixProjectToNodes
      type: Boolean
      description: Prefix your iterations and areas with the project name. If you have enabled this in `NodeStructuresMigrationConfig` you must do it here too.
      defaultValue: false
  jekyllData:
    redirectFrom:
    - /Reference/v1/Processors/TeamMigrationConfig/
    permalink: /Reference/v1/Processors/TeamMigrationContext/
- classData:
    optionsClassName: TestConfigurationsMigrationConfig
    optionsClassFullName: MigrationTools._EngineV1.Configuration.Processing.TestConfigurationsMigrationConfig
    configurationSamples:
    - name: default
      description: 
      sample: >-
        {
          "$type": "TestConfigurationsMigrationConfig",
          "Enabled": false
        }
      sampleFor: MigrationTools._EngineV1.Configuration.Processing.TestConfigurationsMigrationConfig
    description: This processor can migrate `test configuration`. This should be run before `LinkMigrationConfig`.
    className: TestConfigurationsMigrationContext
    typeName: Processors
    architecture: v1
    options:
    - parameterName: Enabled
      type: Boolean
      description: missng XML code comments
      defaultValue: missng XML code comments
  jekyllData:
    redirectFrom:
    - /Reference/v1/Processors/TestConfigurationsMigrationConfig/
    permalink: /Reference/v1/Processors/TestConfigurationsMigrationContext/
- classData:
    optionsClassName: TestPlansAndSuitesMigrationConfig
    optionsClassFullName: MigrationTools._EngineV1.Configuration.Processing.TestPlansAndSuitesMigrationConfig
    configurationSamples:
    - name: default
      description: 
      sample: >-
        {
          "$type": "TestPlansAndSuitesMigrationConfig",
          "Enabled": false,
          "PrefixProjectToNodes": false,
          "OnlyElementsWithTag": null,
          "TestPlanQueryBit": null,
          "RemoveAllLinks": false,
          "MigrationDelay": 0,
          "UseCommonNodeStructureEnricherConfig": false,
          "NodeBasePaths": null,
          "AreaMaps": null,
          "IterationMaps": null,
          "RemoveInvalidTestSuiteLinks": false,
          "FilterCompleted": false
        }
      sampleFor: MigrationTools._EngineV1.Configuration.Processing.TestPlansAndSuitesMigrationConfig
    description: Rebuilds Suits and plans for Test Cases migrated using the WorkItemMigration
    className: TestPlansAndSuitesMigrationContext
    typeName: Processors
    architecture: v1
    options:
    - parameterName: AreaMaps
      type: Dictionary
      description: See documentation for [NodeStructure](/docs/Reference/v1/Processors/WorkItemMigrationConfig.md)
      defaultValue: null
    - parameterName: Enabled
      type: Boolean
      description: missng XML code comments
      defaultValue: missng XML code comments
    - parameterName: FilterCompleted
      type: Boolean
      description: missng XML code comments
      defaultValue: missng XML code comments
    - parameterName: IterationMaps
      type: Dictionary
      description: See documentation for [NodeStructure](/docs/Reference/v1/Processors/WorkItemMigrationConfig.md)
      defaultValue: null
    - parameterName: MigrationDelay
      type: Int32
      description: ??Not sure what this does. Check code.
      defaultValue: 0
    - parameterName: NodeBasePaths
      type: String[]
      description: See documentation for [NodeStructure](/docs/Reference/v1/Processors/WorkItemMigrationConfig.md)
      defaultValue: '[]'
    - parameterName: OnlyElementsWithTag
      type: String
      description: The tag name that is present on all elements that must be migrated. If this option isn't present this processor will migrate all.
      defaultValue: '`String.Empty`'
    - parameterName: PrefixProjectToNodes
      type: Boolean
      description: Prefix the nodes with the new project name.
      defaultValue: false
    - parameterName: RemoveAllLinks
      type: Boolean
      description: ??Not sure what this does. Check code.
      defaultValue: false
    - parameterName: RemoveInvalidTestSuiteLinks
      type: Boolean
      description: Remove Invalid Links, see https://github.com/nkdAgility/azure-devops-migration-tools/issues/178
      defaultValue: missng XML code comments
    - parameterName: TestPlanQueryBit
      type: String
      description: Filtering conditions to decide whether to migrate a test plan or not. When provided, this partial query is added after `Select * From TestPlan Where` when selecting test plans. Among filtering options, `AreaPath`, `PlanName` and `PlanState` are known to work. There is unfortunately no documentation regarding the available fields.
      defaultValue: '`String.Empty`'
    - parameterName: UseCommonNodeStructureEnricherConfig
      type: Boolean
      description: Indicates whether the configuration for node structure transformation should be taken from the common enricher configs. Otherwise the configuration elements below are used
      defaultValue: false
  jekyllData:
    redirectFrom:
    - /Reference/v1/Processors/TestPlansAndSuitesMigrationConfig/
    permalink: /Reference/v1/Processors/TestPlansAndSuitesMigrationContext/
- classData:
    optionsClassName: TestVariablesMigrationConfig
    optionsClassFullName: MigrationTools._EngineV1.Configuration.Processing.TestVariablesMigrationConfig
    configurationSamples:
    - name: default
      description: 
      sample: >-
        {
          "$type": "TestVariablesMigrationConfig",
          "Enabled": false
        }
      sampleFor: MigrationTools._EngineV1.Configuration.Processing.TestVariablesMigrationConfig
    description: This processor can migrate test variables that are defined in the test plans / suites. This must run before `TestPlansAndSuitesMigrationConfig`.
    className: TestVariablesMigrationContext
    typeName: Processors
    architecture: v1
    options:
    - parameterName: Enabled
      type: Boolean
      description: missng XML code comments
      defaultValue: missng XML code comments
  jekyllData:
    redirectFrom:
    - /Reference/v1/Processors/TestVariablesMigrationConfig/
    permalink: /Reference/v1/Processors/TestVariablesMigrationContext/
- classData:
    optionsClassName: WorkItemDeleteConfig
    optionsClassFullName: MigrationTools._EngineV1.Configuration.Processing.WorkItemDeleteConfig
    configurationSamples:
    - name: default
      description: 
      sample: >-
        {
          "$type": "WorkItemDeleteConfig",
          "Enabled": false,
          "WIQLQueryBit": "AND  [Microsoft.VSTS.Common.ClosedDate] = '' AND [System.WorkItemType] NOT IN ('Test Suite', 'Test Plan')",
          "WIQLOrderBit": "[System.ChangedDate] desc",
          "WorkItemIDs": null,
          "FilterWorkItemsThatAlreadyExistInTarget": false,
          "PauseAfterEachWorkItem": false,
          "WorkItemCreateRetryLimit": 0
        }
      sampleFor: MigrationTools._EngineV1.Configuration.Processing.WorkItemDeleteConfig
    description: The `WorkItemDelete` processor allows you to delete any amount of work items that meet the query. **DANGER:** This is not a recoverable action and should be use with extream caution.
    className: WorkItemDelete
    typeName: Processors
    architecture: v1
    options:
    - parameterName: Enabled
      type: Boolean
      description: missng XML code comments
      defaultValue: missng XML code comments
    - parameterName: FilterWorkItemsThatAlreadyExistInTarget
      type: Boolean
      description: missng XML code comments
      defaultValue: missng XML code comments
    - parameterName: PauseAfterEachWorkItem
      type: Boolean
      description: missng XML code comments
      defaultValue: missng XML code comments
    - parameterName: WIQLOrderBit
      type: String
      description: missng XML code comments
      defaultValue: missng XML code comments
    - parameterName: WIQLQueryBit
      type: String
      description: missng XML code comments
      defaultValue: missng XML code comments
    - parameterName: WorkItemCreateRetryLimit
      type: Int32
      description: missng XML code comments
      defaultValue: missng XML code comments
    - parameterName: WorkItemIDs
      type: IList
      description: missng XML code comments
      defaultValue: missng XML code comments
  jekyllData:
    redirectFrom:
    - /Reference/v1/Processors/WorkItemDeleteConfig/
    permalink: /Reference/v1/Processors/WorkItemDelete/
- classData:
    optionsClassName: WorkItemMigrationConfig
    optionsClassFullName: MigrationTools._EngineV1.Configuration.Processing.WorkItemMigrationConfig
    configurationSamples:
    - name: default
      description: 
      sample: >-
        {
          "$type": "WorkItemMigrationConfig",
          "Enabled": false,
          "ReplayRevisions": true,
          "PrefixProjectToNodes": false,
          "UpdateCreatedDate": true,
          "UpdateCreatedBy": true,
          "WIQLQueryBit": "AND  [Microsoft.VSTS.Common.ClosedDate] = '' AND [System.WorkItemType] NOT IN ('Test Suite', 'Test Plan','Shared Steps','Shared Parameter','Feedback Request')",
          "WIQLOrderBit": "[System.ChangedDate] desc",
          "LinkMigration": true,
          "AttachmentMigration": true,
          "AttachmentWorkingPath": "c:\\temp\\WorkItemAttachmentWorkingFolder\\",
          "FixHtmlAttachmentLinks": false,
          "SkipToFinalRevisedWorkItemType": true,
          "WorkItemCreateRetryLimit": 5,
          "FilterWorkItemsThatAlreadyExistInTarget": true,
          "PauseAfterEachWorkItem": false,
          "AttachmentMaxSize": 480000000,
          "AttachRevisionHistory": false,
          "LinkMigrationSaveEachAsAdded": false,
          "GenerateMigrationComment": true,
          "WorkItemIDs": null,
          "MaxRevisions": 0,
          "UseCommonNodeStructureEnricherConfig": false,
          "StopMigrationOnMissingAreaIterationNodes": true,
          "NodeBasePaths": null,
          "AreaMaps": {
            "$type": "Dictionary`2"
          },
          "IterationMaps": {
            "$type": "Dictionary`2"
          },
          "MaxGracefulFailures": 0,
          "SkipRevisionWithInvalidIterationPath": false,
          "SkipRevisionWithInvalidAreaPath": false
        }
      sampleFor: MigrationTools._EngineV1.Configuration.Processing.WorkItemMigrationConfig
    description: WorkItemMigrationConfig is the main processor used to Migrate Work Items, Links, and Attachments. Use `WorkItemMigrationConfig` to configure.
    className: WorkItemMigrationContext
    typeName: Processors
    architecture: v1
    options:
    - parameterName: AreaMaps
      type: Dictionary
      description: Remapping rules for area paths, implemented with regular expressions. The rules apply with a higher priority than the `PrefixProjectToNodes`, that is, if no rule matches the path and the `PrefixProjectToNodes` option is enabled, then the old `PrefixProjectToNodes` behavior is applied.
      defaultValue: '{}'
    - parameterName: AttachmentMaxSize
      type: Int32
      description: '`AttachmentMigration` is set to true then you need to specify a max file size for upload in bites. For Azure DevOps Services the default is 480,000,000 bites (60mb), for TFS its 32,000,000 bites (4mb).'
      defaultValue: 480000000
    - parameterName: AttachmentMigration
      type: Boolean
      description: If enabled this will migrate all of the attachments at the same time as the work item
      defaultValue: true
    - parameterName: AttachmentWorkingPath
      type: String
      description: '`AttachmentMigration` is set to true then you need to specify a working path for attachments to be saved locally.'
      defaultValue: C:\temp\Migration\
    - parameterName: AttachRevisionHistory
      type: Boolean
      description: This will create a json file with the revision history and attach it to the work item. Best used with `MaxRevisions` or `ReplayRevisions`.
      defaultValue: '?'
    - parameterName: Enabled
      type: Boolean
      description: If enabled then the processor will run
      defaultValue: false
    - parameterName: FilterWorkItemsThatAlreadyExistInTarget
      type: Boolean
      description: This loads all of the work items already saved to the Target and removes them from the Source work item list prior to commencing the run. While this may take some time in large data sets it reduces the time of the overall migration significantly if you need to restart.
      defaultValue: true
    - parameterName: FixHtmlAttachmentLinks
      type: Boolean
      description: "**beta** If enabled this will fix any image attachments URL's, work item mention URL's or user mentions in the HTML fields as well as discussion comments. You must specify a PersonalAccessToken in the Source project for Azure DevOps; TFS should use integrated authentication."
      defaultValue: '?'
    - parameterName: GenerateMigrationComment
      type: Boolean
      description: If enabled, adds a comment recording the migration
      defaultValue: false
    - parameterName: IterationMaps
      type: Dictionary
      description: Remapping rules for iteration paths, implemented with regular expressions. The rules apply with a higher priority than the `PrefixProjectToNodes`, that is, if no rule matches the path and the `PrefixProjectToNodes` option is enabled, then the old `PrefixProjectToNodes` behavior is applied.
      defaultValue: '{}'
    - parameterName: LinkMigration
      type: Boolean
      description: If enabled this will migrate the Links for the work item at the same time as the whole work item.
      defaultValue: true
    - parameterName: LinkMigrationSaveEachAsAdded
      type: Boolean
      description: "If you have changed parents before re-running a sync you may get a `TF26194: unable to change the value of the 'Parent' field` error. This will resolve it, but will slow migration."
      defaultValue: false
    - parameterName: MaxGracefulFailures
      type: Int32
      description: The maximum number of failures to tolerate before the migration fails. When set above zero, a work item migration error is logged but the migration will continue until the number of failed items reaches the configured value, after which the migration fails.
      defaultValue: 0
    - parameterName: MaxRevisions
      type: Int32
      description: Sets the maximum number of revisions that will be migrated. "First + Last N = Max". If this was set to 5 and there were 10 revisions you would get the first 1 (creation) and the latest 4 migrated.
      defaultValue: 0
    - parameterName: NodeBasePaths
      type: String[]
      description: The root paths of the Ares / Iterations you want migrate. See [NodeBasePath Configuration](#nodebasepath-configuration)
      defaultValue: '["/"]'
    - parameterName: PauseAfterEachWorkItem
      type: Boolean
      description: Pause after each work item is migrated
      defaultValue: false
    - parameterName: PrefixProjectToNodes
      type: Boolean
      description: Prefix your iterations and areas with the project name. If you have enabled this in `NodeStructuresMigrationConfig` you must do it here too.
      defaultValue: false
    - parameterName: ReplayRevisions
      type: Boolean
      description: You can choose to migrate the tip only (a single write) or all of the revisions (many writes). If you are setting this to `false` to migrate only the tip then you should set `BuildFieldTable` to `true`.
      defaultValue: true
    - parameterName: SkipRevisionWithInvalidAreaPath
      type: Boolean
      description: When set to true, this setting will skip a revision if the source area has not been migrated, has been deleted or is somehow invalid, etc.
      defaultValue: missng XML code comments
    - parameterName: SkipRevisionWithInvalidIterationPath
      type: Boolean
      description: This will skip a revision if the source iteration has not been migrated i.e. it was deleted
      defaultValue: missng XML code comments
    - parameterName: SkipToFinalRevisedWorkItemType
      type: Boolean
      description: "**beta** If enabled this will fix any image attachments URL's, work item mention URL's or user mentions in the HTML fields as well as discussion comments. You must specify a PersonalAccessToken in the Source project for Azure DevOps; TFS should use integrated authentication."
      defaultValue: false
    - parameterName: StopMigrationOnMissingAreaIterationNodes
      type: Boolean
      description: ''
      defaultValue: '?'
    - parameterName: UpdateCreatedBy
      type: Boolean
      description: "If this is enabled the creation process on the target project will create the items with the original creation date. (Important: The item history is always pointed to the date of the migration, it's change only the data column CreateDate, not the internal create date)"
      defaultValue: true
    - parameterName: UpdateCreatedDate
      type: Boolean
      description: "If this is enabled the creation process on the target project will create the items with the original creation date. (Important: The item history is always pointed to the date of the migration, it's change only the data column CreateDate, not the internal create date)"
      defaultValue: true
    - parameterName: UseCommonNodeStructureEnricherConfig
      type: Boolean
      description: ''
      defaultValue: '?'
    - parameterName: WIQLOrderBit
      type: String
      description: A work item query to affect the order in which the work items are migrated. Don't leave this empty.
      defaultValue: '[System.ChangedDate] desc'
    - parameterName: WIQLQueryBit
      type: String
      description: A work item query based on WIQL to select only important work items. To migrate all leave this empty. See [WIQL Query Bits](#wiql-query-bits)
      defaultValue: AND  [Microsoft.VSTS.Common.ClosedDate] = '' AND [System.WorkItemType] NOT IN ('Test Suite', 'Test Plan','Shared Steps','Shared Parameter','Feedback Request')
    - parameterName: WorkItemCreateRetryLimit
      type: Int32
      description: '**beta** If set to a number greater than 0 work items that fail to save will retry after a number of seconds equal to the retry count. This allows for periodic network glitches not to end the process.'
      defaultValue: 5
    - parameterName: WorkItemIDs
      type: IList
      description: A list of work items to import
      defaultValue: '[]'
  jekyllData:
    redirectFrom:
    - /Reference/v1/Processors/WorkItemMigrationConfig/
    permalink: /Reference/v1/Processors/WorkItemMigrationContext/
- classData:
    optionsClassName: WorkItemPostProcessingConfig
    optionsClassFullName: MigrationTools._EngineV1.Configuration.Processing.WorkItemPostProcessingConfig
    configurationSamples:
    - name: default
      description: 
      sample: >-
        {
          "$type": "WorkItemPostProcessingConfig",
          "Enabled": false,
          "WorkItemIDs": null,
          "WIQLQueryBit": "AND [TfsMigrationTool.ReflectedWorkItemId] = '' ",
          "WIQLOrderBit": null,
          "FilterWorkItemsThatAlreadyExistInTarget": false,
          "PauseAfterEachWorkItem": false,
          "WorkItemCreateRetryLimit": 0
        }
      sampleFor: MigrationTools._EngineV1.Configuration.Processing.WorkItemPostProcessingConfig
    description: Reapply field mappings after a migration. Does not migtate Work Items, only reapplied changes to filed mappings.
    className: WorkItemPostProcessingContext
    typeName: Processors
    architecture: v1
    options:
    - parameterName: Enabled
      type: Boolean
      description: missng XML code comments
      defaultValue: missng XML code comments
    - parameterName: FilterWorkItemsThatAlreadyExistInTarget
      type: Boolean
      description: This loads all of the work items already saved to the Target and removes them from the Source work item list prior to commencing the run. While this may take some time in large data sets it reduces the time of the overall migration significantly if you need to restart.
      defaultValue: true
    - parameterName: PauseAfterEachWorkItem
      type: Boolean
      description: Pause after each work item is migrated
      defaultValue: false
    - parameterName: WIQLOrderBit
      type: String
      description: A work item query to affect the order in which the work items are migrated. Don't leave this empty.
      defaultValue: '[System.ChangedDate] desc'
    - parameterName: WIQLQueryBit
      type: String
      description: A work item query based on WIQL to select only important work items. To migrate all leave this empty. See [WIQL Query Bits](#wiql-query-bits)
      defaultValue: AND  [Microsoft.VSTS.Common.ClosedDate] = '' AND [System.WorkItemType] NOT IN ('Test Suite', 'Test Plan','Shared Steps','Shared Parameter','Feedback Request')
    - parameterName: WorkItemCreateRetryLimit
      type: Int32
      description: '**beta** If set to a number greater than 0 work items that fail to save will retry after a number of seconds equal to the retry count. This allows for periodic network glitches not to end the process.'
      defaultValue: 5
    - parameterName: WorkItemIDs
      type: IList
      description: A list of work items to import
      defaultValue: '[]'
  jekyllData:
    redirectFrom:
    - /Reference/v1/Processors/WorkItemPostProcessingConfig/
    permalink: /Reference/v1/Processors/WorkItemPostProcessingContext/
- classData:
    optionsClassName: WorkItemQueryMigrationConfig
    optionsClassFullName: MigrationTools._EngineV1.Configuration.Processing.WorkItemQueryMigrationConfig
    configurationSamples:
    - name: default
      description: 
      sample: >-
        {
          "$type": "WorkItemQueryMigrationConfig",
          "Enabled": false,
          "PrefixProjectToNodes": false,
          "SharedFolderName": "Shared Queries",
          "SourceToTargetFieldMappings": null
        }
      sampleFor: MigrationTools._EngineV1.Configuration.Processing.WorkItemQueryMigrationConfig
    description: This processor can migrate queries for work items. Only shared queries are included. Personal queries can't migrate with this tool.
    className: WorkItemQueryMigrationContext
    typeName: Processors
    architecture: v1
    options:
    - parameterName: Enabled
      type: Boolean
      description: missng XML code comments
      defaultValue: missng XML code comments
    - parameterName: PrefixProjectToNodes
      type: Boolean
      description: Prefix your iterations and areas with the project name. If you have enabled this in `NodeStructuresMigrationConfig` you must do it here too.
      defaultValue: false
    - parameterName: SharedFolderName
      type: String
      description: The name of the shared folder, made a parameter incase it every needs to be edited
      defaultValue: none
    - parameterName: SourceToTargetFieldMappings
      type: Dictionary
      description: Any field mappings
      defaultValue: none
  jekyllData:
    redirectFrom:
    - /Reference/v1/Processors/WorkItemQueryMigrationConfig/
    permalink: /Reference/v1/Processors/WorkItemQueryMigrationContext/
- classData:
    optionsClassName: WorkItemUpdateConfig
    optionsClassFullName: MigrationTools._EngineV1.Configuration.Processing.WorkItemUpdateConfig
    configurationSamples:
    - name: default
      description: 
      sample: >-
        {
          "$type": "WorkItemUpdateConfig",
          "Enabled": false,
          "WhatIf": false,
          "WIQLQueryBit": "AND [TfsMigrationTool.ReflectedWorkItemId] = '' AND  [Microsoft.VSTS.Common.ClosedDate] = '' AND [System.WorkItemType] IN ('Shared Steps', 'Shared Parameter', 'Test Case', 'Requirement', 'Task', 'User Story', 'Bug')",
          "WIQLOrderBit": null,
          "WorkItemIDs": null,
          "FilterWorkItemsThatAlreadyExistInTarget": false,
          "PauseAfterEachWorkItem": false,
          "WorkItemCreateRetryLimit": 0
        }
      sampleFor: MigrationTools._EngineV1.Configuration.Processing.WorkItemUpdateConfig
    description: This processor allows you to make changes in place where we load from teh Target and update the Target. This is used for bulk updates with the most common reason being a process template change.
    className: WorkItemUpdate
    typeName: Processors
    architecture: v1
    options:
    - parameterName: Enabled
      type: Boolean
      description: missng XML code comments
      defaultValue: missng XML code comments
    - parameterName: FilterWorkItemsThatAlreadyExistInTarget
      type: Boolean
      description: This loads all of the work items already saved to the Target and removes them from the Source work item list prior to commencing the run. While this may take some time in large data sets it reduces the time of the overall migration significantly if you need to restart.
      defaultValue: true
    - parameterName: PauseAfterEachWorkItem
      type: Boolean
      description: Pause after each work item is migrated
      defaultValue: false
    - parameterName: WhatIf
      type: Boolean
      description: missng XML code comments
      defaultValue: missng XML code comments
    - parameterName: WIQLOrderBit
      type: String
      description: A work item query to affect the order in which the work items are migrated. Don't leave this empty.
      defaultValue: '[System.ChangedDate] desc'
    - parameterName: WIQLQueryBit
      type: String
      description: A work item query based on WIQL to select only important work items. To migrate all leave this empty. See [WIQL Query Bits](#wiql-query-bits)
      defaultValue: AND  [Microsoft.VSTS.Common.ClosedDate] = '' AND [System.WorkItemType] NOT IN ('Test Suite', 'Test Plan','Shared Steps','Shared Parameter','Feedback Request')
    - parameterName: WorkItemCreateRetryLimit
      type: Int32
      description: '**beta** If set to a number greater than 0 work items that fail to save will retry after a number of seconds equal to the retry count. This allows for periodic network glitches not to end the process.'
      defaultValue: 5
    - parameterName: WorkItemIDs
      type: IList
      description: A list of work items to import
      defaultValue: '[]'
  jekyllData:
    redirectFrom:
    - /Reference/v1/Processors/WorkItemUpdateConfig/
    permalink: /Reference/v1/Processors/WorkItemUpdate/
- classData:
    optionsClassName: WorkItemUpdateAreasAsTagsConfig
    optionsClassFullName: MigrationTools._EngineV1.Configuration.Processing.WorkItemUpdateAreasAsTagsConfig
    configurationSamples:
    - name: default
      description: 
      sample: >-
        {
          "$type": "WorkItemUpdateAreasAsTagsConfig",
          "Enabled": false,
          "AreaIterationPath": null
        }
      sampleFor: MigrationTools._EngineV1.Configuration.Processing.WorkItemUpdateAreasAsTagsConfig
    description: A common issue with older *TFS/Azure DevOps* instances is the proliferation of `Area Paths`. With the use of `Area Path` for `Teams` and the addition of the `Node Name` column option these extensive tag hierarchies should instad be moved to tags.
    className: WorkItemUpdateAreasAsTagsContext
    typeName: Processors
    architecture: v1
    options:
    - parameterName: AreaIterationPath
      type: String
      description: This is a required parameter. That define the root path of the iteration. To get the full path use `\`
      defaultValue: '\'
    - parameterName: Enabled
      type: Boolean
      description: missng XML code comments
      defaultValue: missng XML code comments
  jekyllData:
    redirectFrom:
    - /Reference/v1/Processors/WorkItemUpdateAreasAsTagsConfig/
    permalink: /Reference/v1/Processors/WorkItemUpdateAreasAsTagsContext/
