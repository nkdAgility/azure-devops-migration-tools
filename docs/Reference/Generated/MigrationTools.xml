<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MigrationTools</name>
    </assembly>
    <members>
        <member name="M:MigrationTools.DataContracts.Pipelines.BuildDefinition.ResetObject">
            <inheritdoc/>
        </member>
        <member name="M:MigrationTools.DataContracts.Pipelines.Process.ShouldSerializeYamlFilename">
            <summary>
            If the value is set, then serialize it, if it isn't don't
            </summary>
            <returns>bool on if the YamlFilename should be serialized.</returns>
        </member>
        <member name="M:MigrationTools.DataContracts.Pipelines.Process.ShouldSerializePhases">
            <summary>
            If the type is 1 then this is a classis pipeline, so the phases should be serialized.
            </summary>
            <returns>bool on if the Phases should be serialized.</returns>
        </member>
        <member name="M:MigrationTools.DataContracts.Pipelines.ReleaseDefinition.ResetObject">
            <inheritdoc/>
        </member>
        <member name="M:MigrationTools.DataContracts.RestApiDefinition.ResetObject">
            <summary>
            reset values that cannot be set on new objects
            </summary>
            <returns>The clean RestApiDefinition</returns>
        </member>
        <member name="M:MigrationTools.DataContracts.RestApiDefinition.HasTaskGroups">
            <summary>
            Checks whether the Definition references Taskgroups
            </summary>
            <returns>bool</returns>
        </member>
        <member name="M:MigrationTools.DataContracts.RestApiDefinition.HasVariableGroups">
            <summary>
            Checks whether the Definition references Variablegroups
            </summary>
            <returns>bool</returns>
        </member>
        <member name="P:MigrationTools.Enrichers.ProcessorEnricherOptions.Enabled">
            <summary>
            If enabled this will run this migrator
            </summary>
            <default>true</default>
        </member>
        <member name="P:MigrationTools.Enrichers.ProcessorEnricherOptions.RefName">
            <summary>
            For internal use
            </summary>
        </member>
        <member name="P:MigrationTools.Options.IOptions.Enabled">
            <summary>
            Will be used if enabled
            </summary>
        </member>
        <member name="P:MigrationTools.Processors.Infrastructure.IProcessorOptions.SourceName">
            <summary>
            This is the `IEndpoint` that will be used as the source of the Migration. Can be null for a write only processor.
            </summary>
        </member>
        <member name="P:MigrationTools.Processors.Infrastructure.IProcessorOptions.TargetName">
            <summary>
            This is the `IEndpoint` that will be used as the Target of the Migration. Can be null for a read only processor.
            </summary>
        </member>
        <member name="P:MigrationTools.Processors.Infrastructure.IProcessorOptions.Enrichers">
            <summary>
            List of Enrichers that can be used to add more features to this processor. Only works with Native Processors and not legacy Processors.
            </summary>
        </member>
        <member name="P:MigrationTools.Processors.Infrastructure.ProcessorOptions.Enabled">
            <summary>
            If set to `true` then the processor will run. Set to `false` and the processor will not run.
            </summary>
        </member>
        <member name="P:MigrationTools.Processors.Infrastructure.ProcessorOptions.Enrichers">
            <summary>
            List of Enrichers that can be used to add more features to this processor. Only works with Native Processors and not legacy Processors.
            </summary>
        </member>
        <member name="P:MigrationTools.Processors.Infrastructure.ProcessorOptions.RefName">
            <summary>
            `Refname` will be used in the future to allow for using named Options without the need to copy all of the options.
            </summary>
        </member>
        <member name="T:MigrationTools.Processors.WorkItemTrackingProcessor">
            <summary>
            This processor is intended, with the aid of [ProcessorEnrichers](../ProcessorEnrichers/index.md), to allow the migration of Work Items between two [Endpoints](../Endpoints/index.md).
            </summary>
        </member>
        <member name="T:MigrationTools.Tools.FieldClearMapOptions">
            <summary>
            Allows you to set an already populated field to Null. This will only work with fields that support null.
            </summary>
            <status>ready</status>
            <processingtarget>Work Item</processingtarget>
        </member>
        <member name="T:MigrationTools.Tools.FieldLiteralMapOptions">
            <summary>
            Sets a field on the `target` to b a specific value.
            </summary>
            <status>ready</status>
            <processingtarget>Work Item Field</processingtarget>
        </member>
        <member name="T:MigrationTools.Tools.FieldMergeMapOptions">
            <summary>
            Ever wanted to merge two or three fields? This mapping will let you do just that.
            </summary>
            <status>ready</status>
            <processingtarget>Work Item Field</processingtarget>
        </member>
        <member name="T:MigrationTools.Tools.FieldSkipMapOptions">
            <summary>
            Allows you to skip populating an existing field. Value in target with be reset to its OriginalValue.
            </summary>
            <status>ready</status>
            <processingtarget>Work Item</processingtarget>
        </member>
        <member name="T:MigrationTools.Tools.FieldToFieldMapOptions">
            <summary>
            Just want to map one field to another? This is the one for you.
            </summary>
            <status>ready</status>
            <processingtarget>Work Item Field</processingtarget>
        </member>
        <member name="T:MigrationTools.Tools.FieldToFieldMultiMapOptions">
            <summary>
            Want to setup a bunch of field maps in a single go. Use this shortcut!
            </summary>
            <status>ready</status>
            <processingtarget>Work Item Field</processingtarget>
        </member>
        <member name="T:MigrationTools.Tools.FieldToTagFieldMapOptions">
            <summary>
            Want to take a field and convert its value to a tag? Done...
            </summary>
            <status>ready</status>
            <processingtarget>Work Item Field</processingtarget>
        </member>
        <member name="T:MigrationTools.Tools.FieldValueMapOptions">
            <summary>
            Need to map not just the field but also values? This is the default value mapper.
            </summary>
            <status>ready</status>
            <processingtarget>Work Item Field</processingtarget>
        </member>
        <member name="T:MigrationTools.Tools.FieldValueToTagMapOptions">
            <summary>
            Need to create a Tag based on a field value? Just create a regex match and choose how to populate the target.
            </summary>
            <status>ready</status>
            <processingtarget>Work Item Field</processingtarget>
        </member>
        <member name="T:MigrationTools.Tools.MultiValueConditionalMapOptions">
            <summary>
            ??? If you know how to use this please send a PR :)
            </summary>
            <status>ready</status>
            <processingtarget>Work Item Field</processingtarget>
        </member>
        <member name="T:MigrationTools.Tools.RegexFieldMapOptions">
            <summary>
             I just need that bit of a field... need to send "2016.2" to two fields, one for year and one for release? Done.
            </summary>
            <status>ready</status>
            <processingtarget>Work Item Field</processingtarget>
        </member>
        <member name="T:MigrationTools.Tools.TreeToTagFieldMapOptions">
            <summary>
            Need to clear out those nasty Area tree hierarchies? This creates Tags for each node in the Area Path...
            </summary>
            <status>ready</status>
            <processingtarget>Work Item Field</processingtarget>
        </member>
        <member name="P:MigrationTools.Tools.Infrastructure.FieldMapOptions.Enabled">
            <summary>
            If set to `true` then the Fieldmap will run. Set to `false` and the processor will not run.
            </summary>
        </member>
        <member name="P:MigrationTools.Tools.Infrastructure.IFieldMapOptions.ApplyTo">
            <summary>
            A list of Work Item Types that this Field Map will apply to. If the list is empty it will apply to all Work Item Types. You can use "*" to apply to all Work Item Types.
            </summary>
        </member>
        <member name="M:MigrationTools.Tools.Infrastructure.EmbededImagesRepairToolBase`1.FixEmbededImages(MigrationTools.DataContracts.WorkItemData,System.String,System.String,System.String)">
            from https://gist.github.com/pietergheysens/792ed505f09557e77ddfc1b83531e4fb
        </member>
        <member name="M:MigrationTools.Tools.Infrastructure.EmbededImagesRepairToolBase`1.GetImageFormat(System.Byte[])">
            <summary>
            Retrieve Image Format for a given byte array
            </summary>
            <param name="bytes">Image to check</param>
            <remarks>From https://stackoverflow.com/a/9446045/1317161</remarks>
            <returns>Image format</returns>
        </member>
        <member name="P:MigrationTools.Tools.Infrastructure.ToolOptions.Enabled">
            <summary>
            If set to `true` then the tool will run. Set to `false` and the processor will not run.
            </summary>
        </member>
        <member name="T:MigrationTools.Tools.StringManipulatorTool">
            <summary>
            Used to process the String fields of a work item. This is useful for cleaning up data. It will limit fields to a max length and apply regex replacements based on what is configured. Each regex replacement is applied in order and can be enabled or disabled.
            </summary>
        </member>
        <member name="P:MigrationTools.Tools.StringManipulatorToolOptions.MaxStringLength">
            <summary>
            Max number of chars in a string. Applied last, and set to 1000000 by default.
            </summary>
            <default>1000000</default>
        </member>
        <member name="P:MigrationTools.Tools.StringManipulatorToolOptions.Manipulators">
            <summary>
            List of regex based string manipulations to apply to all string fields. Each regex replacement is applied in order and can be enabled or disabled.
            </summary>
            <default>{}</default>
        </member>
        <member name="T:MigrationTools.Tools.WorkItemTypeMappingTool">
            <summary>
            Used to process the String fields of a work item. This is useful for cleaning up data. It will limit fields to a max length and apply regex replacements based on what is configured. Each regex replacement is applied in order and can be enabled or disabled.
            </summary>
        </member>
        <member name="P:MigrationTools.Tools.WorkItemTypeMappingToolOptions.Mappings">
            <summary>
            List of work item mappings. 
            </summary>
            <default>{}</default>
        </member>
        <member name="P:MigrationTools._EngineV1.Configuration.IProcessorConfig.Enabled">
            <summary>
            Active the processor if it true.
            </summary>
        </member>
        <member name="M:MigrationTools._EngineV1.Configuration.IProcessorConfig.IsProcessorCompatible(System.Collections.Generic.IReadOnlyList{MigrationTools._EngineV1.Configuration.IProcessorConfig})">
            <summary>
            Indicates, if this processor can be added to the list of current processors or not.
            Some processors are not compatible with each other.
            </summary>
            <param name="otherProcessors">List of already configured processors.</param>
        </member>
        <member name="F:ThisAssembly.Git.IsDirty">
            <summary>
            Gets whether the current repository is dirty.
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.IsDirtyString">
            <summary>
            => @"false"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.RepositoryUrl">
            <summary>
            => @"https://github.com/nkdAgility/azure-devops-migration-tools.git"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.Branch">
            <summary>
            => @"feature/configuration-builder"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.Commit">
            <summary>
            => @"1c8f3d8c"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.Sha">
            <summary>
            => @"1c8f3d8ca42d0c1df90a95a3e37e24a50632cc34"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.CommitDate">
            <summary>
            => @"2024-08-29T08:55:05+01:00"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.Commits">
            <summary>
            => @"228"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.Tag">
            <summary>
            => @"v15.2.1-228-g1c8f3d8c"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseTag">
            <summary>
            => @"v15.2.1"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Major">
            <summary>
            => @"15"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Minor">
            <summary>
            => @"2"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Patch">
            <summary>
            => @"1"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Major">
            <summary>
            => @"15"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Minor">
            <summary>
            => @"2"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Patch">
            <summary>
            => @"229"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Label">
            <summary>
            => @""
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.DashLabel">
            <summary>
            => @""
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Source">
            <summary>
            => @"Tag"
            </summary>
        </member>
    </members>
</doc>
