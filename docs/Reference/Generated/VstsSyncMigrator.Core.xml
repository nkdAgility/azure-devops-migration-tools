<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VstsSyncMigrator.Core</name>
    </assembly>
    <members>
        <member name="T:VstsSyncMigrator.Engine.FakeProcessor">
            <summary>
            Note: this is only for internal usage. Don't use this in your configurations.
            </summary>
        </member>
        <member name="T:VstsSyncMigrator.Engine.TeamMigrationContext">
            <summary>
            Migrates Teams and Team Settings: This should be run after `NodeStructuresMigrationConfig` and before all other processors.
            </summary>
            <status>preview</status>
            <processingtarget>Teams</processingtarget>
        </member>
        <member name="T:VstsSyncMigrator.Engine.TestConfigurationsMigrationContext">
            <summary>
            This processor can migrate `test configuration`. This should be run before `LinkMigrationConfig`.
            </summary>
            <status>Beta</status>
            <processingtarget>Suites &amp; Plans</processingtarget>
        </member>
        <member name="T:VstsSyncMigrator.Engine.TestPlansAndSuitesMigrationContext">
            <summary>
            Rebuilds Suits and plans for Test Cases migrated using the WorkItemMigration
            </summary>
            <status>Beta</status>
            <processingtarget>Suites &amp; Plans</processingtarget>
        </member>
        <member name="M:VstsSyncMigrator.Engine.TestPlansAndSuitesMigrationContext.ApplyConfigurations(Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntry,Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntry)">
            <summary>
            Apply configurations to a single test case entry on the target, by copying from the source
            </summary>
            <param name="sourceEntry"></param>
            <param name="targetEntry"></param>
        </member>
        <member name="M:VstsSyncMigrator.Engine.TestPlansAndSuitesMigrationContext.ApplyDefaultConfigurations(Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase,Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase)">
            <summary>
            Sets default configurations on migrated test suites.
            </summary>
            <param name="source">The test suite to take as a source.</param>
            <param name="target">The test suite to apply the default configurations to.</param>
        </member>
        <member name="M:VstsSyncMigrator.Engine.TestPlansAndSuitesMigrationContext.FixWorkItemIdInQuery(Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase)">
            <summary>
            Fix work item ID's in query based suites
            </summary>
        </member>
        <member name="M:VstsSyncMigrator.Engine.TestPlansAndSuitesMigrationContext.GetTargetIdentity(Microsoft.TeamFoundation.Framework.Client.IdentityDescriptor)">
            <summary>
            Retrieve the target identity for a given source descriptor
            </summary>
            <param name="sourceIdentityDescriptor">Source identity Descriptor</param>
            <returns>Target Identity</returns>
        </member>
        <member name="M:VstsSyncMigrator.Engine.TestPlansAndSuitesMigrationContext.RemoveInvalidLinks(Microsoft.TeamFoundation.TestManagement.Client.ITestPlan)">
            <summary>
            Remove invalid links
            </summary>
            <remarks>
            VSTS cannot store some links which have an invalid URI Scheme. You will get errors like "The URL specified has a potentially unsafe URL protocol"
            For myself, the issue were urls that pointed to TFVC:    "vstfs:///VersionControl/Changeset/19415"
            Unfortunately the API does not seem to allow access to the "raw" data, so there's nowhere to retrieve this as far as I can find.
            Should take care of https://github.com/nkdAgility/azure-devops-migration-tools/issues/178
            </remarks>
            <param name="targetPlan">The plan to remove invalid links drom</param>
        </member>
        <member name="T:VstsSyncMigrator.Engine.TestVariablesMigrationContext">
            <summary>
            This processor can migrate test variables that are defined in the test plans / suites. This must run before `TestPlansAndSuitesMigrationConfig`. 
            </summary>
            <status>Beta</status>
            <processingtarget>Suites &amp; Plans</processingtarget>
        </member>
        <member name="T:VstsSyncMigrator.Engine.WorkItemMigrationContext">
            <summary>
            WorkItemMigrationConfig is the main processor used to Migrate Work Items, Links, and Attachments.
            Use `WorkItemMigrationConfig` to configure.
            </summary>
            <status>ready</status>
            <processingtarget>Work Items</processingtarget>
        </member>
        <member name="T:VstsSyncMigrator.Engine.WorkItemPostProcessingContext">
            <summary>
            Reapply field mappings after a migration. Does not migtate Work Items, only reapplied changes to filed mappings.
            </summary>
            <status>preview</status>
            <processingtarget>Work Items</processingtarget>
        </member>
        <member name="T:VstsSyncMigrator.Engine.WorkItemQueryMigrationContext">
            <summary>
            This processor can migrate queries for work items. Only shared queries are included. Personal queries can't migrate with this tool.
            </summary>
            <status>preview</status>
            <processingtarget>Shared Queries</processingtarget>
        </member>
        <member name="F:VstsSyncMigrator.Engine.WorkItemQueryMigrationContext.config">
            <summary>
            The processor configuration
            </summary>
        </member>
        <member name="T:VstsSyncMigrator.Engine.CreateTeamFolders">
            <summary>
            Creates folders in Sared Queries for each Team
            </summary>
            <status>alpha</status>
            <processingtarget>Shared Queries</processingtarget>
        </member>
        <member name="T:VstsSyncMigrator.Engine.ExportProfilePictureFromADContext">
            <summary>
            Downloads corporate images and updates TFS/Azure DevOps profiles
            </summary>
            <status>alpha</status>
            <processingtarget>Profiles</processingtarget>
        </member>
        <member name="T:VstsSyncMigrator.Engine.ImportProfilePictureContext">
            <summary>
            Downloads corporate images and updates TFS/Azure DevOps profiles
            </summary>
            <status>alpha</status>
            <processingtarget>Profiles</processingtarget>
        </member>
        <member name="T:VstsSyncMigrator.Engine.WorkItemDelete">
            <summary>
            The `WorkItemDelete` processor allows you to delete any amount of work items that meet the query.
            **DANGER:** This is not a recoverable action and should be use with extream caution.
            </summary>
            <status>ready</status>
            <processingtarget>WorkItem</processingtarget>
        </member>
        <member name="T:VstsSyncMigrator.Engine.WorkItemUpdate">
            <summary>
            This processor allows you to make changes in place where we load from teh Target and update the Target. This is used for bulk updates with the most common reason being a process template change.
            </summary>
            <processingtarget>WorkItem</processingtarget>
        </member>
        <member name="T:VstsSyncMigrator.Engine.WorkItemUpdateAreasAsTagsContext">
            <summary>
            A common issue with older *TFS/Azure DevOps* instances is the proliferation of `Area Paths`. With the use of `Area Path` for `Teams` and the addition of the `Node Name` column option these extensive tag hierarchies should instad be moved to tags.
            </summary>
            <status>Beta</status>
            <processingtarget>Work Item</processingtarget>
        </member>
        <member name="T:VstsSyncMigrator.Core.Execution.MigrationContext.ExportUsersForMappingContext">
            <summary>
            ExportUsersForMappingContext is a tool used to create a starter mapping file for users between the source and target systems.
            Use `ExportUsersForMappingConfig` to configure.
            </summary>
            <status>ready</status>
            <processingtarget>Work Items</processingtarget>
        </member>
    </members>
</doc>
