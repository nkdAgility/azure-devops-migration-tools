<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MigrationTools.Clients.AzureDevops.Rest</name>
    </assembly>
    <members>
        <member name="M:MigrationTools.Endpoints.AzureDevOpsEndpoint.GetHttpClient``1(System.Object[])">
            <summary>
            Create a new instance of HttpClient including Heades
            </summary>
            <param name="routeParams">strings that are injected into the route parameters of the definitions url</param>
            <returns>HttpClient</returns>
        </member>
        <member name="M:MigrationTools.Endpoints.AzureDevOpsEndpoint.GetHttpClient(System.String,System.String,System.Object[])">
            <summary>
            Create a new instance of HttpClient including Heades
            </summary>
            <param name="url"></param>
            <param name="versionParameter">allows caller to override the default api version (ie. api-version=5.1)</param>
            <param name="routeParams">strings that are injected into the route parameters of the definitions url</param>
            <returns>HttpClient</returns>
        </member>
        <member name="M:MigrationTools.Endpoints.AzureDevOpsEndpoint.GetUriBuilderBasedOnEndpointAndType``1(System.Object[])">
            <summary>
            Method to get the RESP API URLs right
            </summary>
            <param name="routeParameters">strings that are injected into the route parameters of the definitions url</param>
            <returns>UriBuilder</returns>
        </member>
        <member name="M:MigrationTools.Endpoints.AzureDevOpsEndpoint.GetApiDefinitionsAsync``1(System.Object[],System.String,System.String,System.Boolean)">
            <summary>
            Generic Method to get API Definitions (Taskgroups, Variablegroups, Build- or Release Pipelines, ProcessDefinition)
            </summary>
            <typeparam name="DefinitionType">
            Type of Definition. Can be: Taskgroup, Build- or Release Pipeline, ProcessDefinition
            </typeparam>
            <param name="routeParameters">strings that are injected into the route parameters of the definitions url</param>
            <param name="queryString">additional query string parameters passed to the underlying api call</param>
            <param name="singleDefinitionQueryString">additional query string parameter passed when pulling the single instance details (ie. $expands, etc)</param>
            <param name="queryForDetails">a boolean flag to allow caller to skip the calls for each individual definition details</param>
            <returns>List of API Definitions</returns>
        </member>
        <member name="M:MigrationTools.Endpoints.AzureDevOpsEndpoint.GetApiDefinitionAsync``1(System.Object[],System.String,System.String,System.Boolean)">
            <summary>
            Get a single instance of a defined type
            </summary>
            <typeparam name="DefinitionType"></typeparam>
            <param name="routeParameters">strings that are injected into the route parameters of the definitions url</param>
            <param name="queryString">additional query string parameters passed to the underlying api call</param>
            <param name="singleDefinitionQueryString">additional query string parameter passed when pulling the single instance details (ie. $expands, etc)</param>
            <param name="queryForDetails">a boolean flag to allow caller to skip the calls for each individual definition details</param>
            <returns></returns>
        </member>
        <member name="M:MigrationTools.Endpoints.AzureDevOpsEndpoint.UpdateTaskGroupsAsync(System.Collections.Generic.IEnumerable{MigrationTools.DataContracts.Pipelines.TaskGroup},System.Collections.Generic.IEnumerable{MigrationTools.DataContracts.Pipelines.TaskGroup},System.Collections.Generic.IEnumerable{MigrationTools.DataContracts.Pipelines.TaskGroup})">
            <summary>
            Make HTTP Request to add Revision / Version of Task Group
            </summary>
            <param name="targetDefinitions"></param>
            <param name="rootDefinitions"></param>
            <param name="updatedDefinitions"></param>
            <returns>List of Mappings</returns>
        </member>
        <member name="M:MigrationTools.Endpoints.AzureDevOpsEndpoint.CreateApiDefinitionsAsync``1(System.Collections.Generic.IEnumerable{``0},System.String[])">
            <summary>
            Make HTTP Request to create a Definition
            </summary>
            <typeparam name="DefinitionType"></typeparam>
            <param name="definitionsToBeMigrated"></param>
            <param name="parentIds">strings that are injected into the route parameters of the definitions url</param>
            <returns>List of Mappings</returns>
        </member>
        <member name="M:MigrationTools.Endpoints.AzureDevOpsEndpoint.UpdateApiDefinitionsAsync``1(System.Collections.Generic.IEnumerable{``0},System.String[])">
            <summary>
            Make HTTP Request to update a Definition
            </summary>
            <typeparam name="DefinitionType"></typeparam>
            <param name="definitionsToBeMigrated"></param>
            <param name="parentIds">strings that are injected into the route parameters of the definitions url</param>
            <returns>List of Mappings</returns>
        </member>
        <member name="M:MigrationTools.Endpoints.AzureDevOpsEndpoint.SyncDefinition``1(``0,``0,System.String[])">
            <summary>
            Performs an update or create operation on the target definition
            </summary>
            <typeparam name="DefinitionType"></typeparam>
            <param name="sourceDef"></param>
            <param name="targetDef"></param>
            <param name="parentIds"></param>
            <returns></returns>
        </member>
        <member name="M:MigrationTools.Endpoints.AzureDevOpsEndpoint.MoveWorkItemGroupToNewPage(MigrationTools.DataContracts.Process.WorkItemGroup,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Move work item group to another page and section
            </summary>
            <param name="group"></param>
            <param name="processId"></param>
            <param name="witRefName"></param>
            <param name="pageId"></param>
            <param name="sectionId"></param>
            <param name="oldPageId"></param>
            <param name="oldSectionId"></param>
            <returns></returns>
        </member>
        <member name="M:MigrationTools.Endpoints.AzureDevOpsEndpoint.MoveWorkItemGroupWithinPage(MigrationTools.DataContracts.Process.WorkItemGroup,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Move a work item group from one Layout->Section to another Layout->Section
            </summary>
            <param name="group"></param>
            <param name="processId"></param>
            <param name="witRefName"></param>
            <param name="pageId"></param>
            <param name="sectionId"></param>
            <param name="oldSectionId"></param>
            <returns></returns>
        </member>
        <member name="M:MigrationTools.Endpoints.AzureDevOpsEndpoint.MoveWorkItemControlToOtherGroup(MigrationTools.DataContracts.Process.WorkItemControl,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Move a work item control from out Layout->Group to another Layout->Group
            </summary>
            <param name="control"></param>
            <param name="processId"></param>
            <param name="witRefName"></param>
            <param name="groupId"></param>
            <param name="fieldName"></param>
            <param name="oldGroupId"></param>
            <returns></returns>
        </member>
        <member name="M:MigrationTools.Endpoints.AzureDevOpsEndpoint.AddWorkItemControlToGroup(MigrationTools.DataContracts.Process.WorkItemControl,System.String,System.String,System.String,System.String)">
            <summary>
            Adds a work item control to an existing Layout->Group
            </summary>
            <param name="control"></param>
            <param name="processId"></param>
            <param name="witRefName"></param>
            <param name="groupId"></param>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="T:MigrationTools.Processors.AzureDevOpsPipelineProcessor">
            <summary>
            Azure DevOps Processor that migrates Taskgroups, Build- and Release Pipelines.
            </summary>
        </member>
        <member name="M:MigrationTools.Processors.AzureDevOpsPipelineProcessor.MigratePipelinesAsync">
            <summary>
            Executes Method for migrating Taskgroups, Variablegroups or Pipelines, depinding on what
            is set in the config.
            </summary>
        </member>
        <member name="M:MigrationTools.Processors.AzureDevOpsPipelineProcessor.FindExistingMappings``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{MigrationTools.DataContracts.Mapping})">
            <summary>
            Map the taskgroups that are already migrated
            </summary>
            <typeparam name="DefintionType"></typeparam>
            <param name="sourceDefinitions"></param>
            <param name="targetDefinitions"></param>
            <param name="newMappings"></param>
            <returns>Mapping list</returns>
        </member>
        <member name="M:MigrationTools.Processors.AzureDevOpsPipelineProcessor.FilterOutExistingDefinitions``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Filter existing Definitions
            </summary>
            <typeparam name="DefinitionType"></typeparam>
            <param name="sourceDefinitions"></param>
            <param name="targetDefinitions"></param>
            <returns>List of filtered Definitions</returns>
        </member>
        <member name="M:MigrationTools.Processors.AzureDevOpsPipelineProcessor.FilterOutExistingTaskGroups(System.Collections.Generic.IEnumerable{MigrationTools.DataContracts.Pipelines.TaskGroup},System.Collections.Generic.IEnumerable{MigrationTools.DataContracts.Pipelines.TaskGroup})">
            <summary>
            Filter existing TaskGroups
            </summary>
            <typeparam name="DefinitionType"></typeparam>
            <param name="sourceDefinitions"></param>
            <param name="targetDefinitions"></param>
            <returns>List of filtered Definitions</returns>
        </member>
        <member name="M:MigrationTools.Processors.AzureDevOpsPipelineProcessor.SortDefinitionsByVersion(System.Collections.Generic.IEnumerable{MigrationTools.DataContracts.Pipelines.TaskGroup})">
            <summary>
            Group and Sort Definitions by Version numer
            </summary>
            <param name="sourceDefinitions"></param>
            <returns>List of sorted Definitions</returns>
        </member>
        <member name="M:MigrationTools.Processors.AzureDevOpsPipelineProcessor.GetSelectedDefinitionsFromEndpointAsync``1(MigrationTools.Endpoints.AzureDevOpsEndpoint,System.Collections.Generic.List{System.String})">
            <summary>
            Retrieve the selected pipeline definitions from the Azure DevOps Endpoint for the <typeparamref name="DefinitionType"/> type.
            </summary>
            <typeparam name="DefinitionType">The type of Pipeline definition to query. The type must inherit from <see cref="T:MigrationTools.DataContracts.RestApiDefinition"/>.</typeparam>
            <param name="endpoint">The <see cref="T:MigrationTools.Endpoints.AzureDevOpsEndpoint"/> to query against.</param>
            <param name="definitionNames">The list of definitions to query for. If the value is <c>null</c> or an empty list, all definitions will be queried.</param>
            <returns></returns>
        </member>
        <member name="P:MigrationTools.Processors.AzureDevOpsPipelineProcessorOptions.MigrateBuildPipelines">
            <summary>
            Migrate Build Pipelines
            </summary>
            <default>true</default>
        </member>
        <member name="P:MigrationTools.Processors.AzureDevOpsPipelineProcessorOptions.MigrateReleasePipelines">
            <summary>
            Migrate Release Pipelines
            </summary>
            <default>true</default>
        </member>
        <member name="P:MigrationTools.Processors.AzureDevOpsPipelineProcessorOptions.MigrateTaskGroups">
            <summary>
            Migrate Task Groups
            </summary>
            <default>true</default>
        </member>
        <member name="P:MigrationTools.Processors.AzureDevOpsPipelineProcessorOptions.MigrateVariableGroups">
            <summary>
            Migrate Valiable Groups
            </summary>
            <default>true</default>
        </member>
        <member name="P:MigrationTools.Processors.AzureDevOpsPipelineProcessorOptions.MigrateServiceConnections">
            <summary>
            Migrate Service Connections **secrets need to be entered manually**
            </summary>
            <default>true</default>
        </member>
        <member name="P:MigrationTools.Processors.AzureDevOpsPipelineProcessorOptions.BuildPipelines">
            <summary>
            List of Build Pipelines to process. If this is `null` then all Build Pipelines will be processed.
            </summary>
        </member>
        <member name="P:MigrationTools.Processors.AzureDevOpsPipelineProcessorOptions.ReleasePipelines">
            <summary>
            List of Release Pipelines to process. If this is `null` then all Release Pipelines will be processed.
            </summary>
        </member>
        <member name="P:MigrationTools.Processors.AzureDevOpsPipelineProcessorOptions.RepositoryNameMaps">
            <summary>
            Map of Source Repository to Target Repository Names 
            </summary>
        </member>
        <member name="T:MigrationTools.Processors.ProcessorModel">
            <summary>
            Data model used by Process Definition Processor to keep track of it' state
            </summary>
        </member>
        <member name="T:MigrationTools.Processors.ProcessDefinitionModel">
            <summary>
            Model that carries meta and state of an individual process definition
            </summary>
        </member>
        <member name="T:MigrationTools.Processors.WorkItemTypeModel">
            <summary>
            Model that carries meta and state of an individual work item type
            </summary>
        </member>
        <member name="T:MigrationTools.Processors.ProcessDefinitionProcessor">
            <summary>
            Process definition processor used to keep processes between two orgs in sync
            </summary>
        </member>
    </members>
</doc>
